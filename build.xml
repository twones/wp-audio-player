<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="Audio Player WordPress plugin" basedir="." default="deploy.default">
	<!-- Load properties -->
	<property file="build.properties"/>
	
	<property name="plugin.src.dir" value="plugin"/>
	<property name="player.src.dir" value="source"/>
	<property name="build.dir" value="build"/>
	<property name="dist.dir" value="dist"/>
	<property name="lib.dir" value="lib"/>
	
	<!-- Load task definitions -->
	<path id="class.path">
		<fileset dir="${lib.dir}" includes="*.jar"/>
	</path>
	<taskdef file="tasks.properties" classpathref="class.path"/>
	
	<property name="swfcompile.jsfl" value="${basedir}/swfcompile.jsfl"/>
	
	<target name="-init" depends="clean">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<target name="clean" description="Clean up">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete file="swfcompile.jsfl"/>
	</target>

	<target name="deploy.to.all" depends="build" description="Deploy to all local test sites">
		<foreach target="-deploy" param="deploy.dir">
			<path>
				<dirset dir="${deploy.path}" includes="wp*"/>
			</path>
		</foreach>
		<antcall target="clean"/>
	</target>

	<target name="deploy.to" depends="build" description="Deploy to one local test site">
		<input message="Please select test site to deploy to:" addproperty="wp.version" defaultvalue="wp23"/>
		<antcall target="-deploy">
			<param name="deploy.dir" value="${deploy.path}/${wp.version}"/>
		</antcall>
		<antcall target="clean"/>
	</target>

	<target name="deploy.default" depends="build" description="Deploy to default local test site">
		<antcall target="-deploy">
			<param name="deploy.dir" value="${deploy.path}/${default.deploy.version}"/>
		</antcall>
		<antcall target="clean"/>
	</target>

	<target name="-deploy">
		<delete dir="${deploy.dir}/wp-content/plugins/audio-player"/>
		<unzip src="${dist.dir}/audio-player.zip" dest="${deploy.dir}/wp-content/plugins" overwrite="true"/>
	</target>

	<target name="build" depends="-init" description="Build plugin archive">
		<mkdir dir="${build.dir}/audio-player"/>
		<copy todir="${build.dir}/audio-player" includeemptydirs="true">
			<fileset dir="${plugin.src.dir}">
				<include name="**/*.*"/>
				<exclude name="**/graphics-source.png"/>
				<exclude name="**/*.js"/>
				<exclude name="**/*.po"/>
				<exclude name="**/*.back"/>
			</fileset>
		</copy>
		<copy file="${plugin.src.dir}/assets/lib/mootools-compressed.js" tofile="${build.dir}/audio-player/assets/lib/mootools.js"/>
		
		<condition property="swfExists">
	    	<available file="${player.src.dir}/player.swf"/>
	    </condition>
		
		<antcall target="-compileIfMissing"/>
		
		<copy todir="${build.dir}/audio-player/assets" file="${player.src.dir}/player.swf"/>
		
		<!-- Minify JavaScript files (except mootools and swfobject) -->
		<apply executable="java" parallel="false" dest="${build.dir}/audio-player">
			<fileset dir="${plugin.src.dir}">
				<include name="**/*.js"/>
				<exclude name="**/lib/*.js"/>
			</fileset>
			<arg line="-jar"/>
			<arg path="${lib.dir}/yuicompressor-2.2.5.jar"/>
			<arg line="--charset utf-8"/>
			<arg line="-o"/>
			<targetfile/>
			<srcfile/>
			<mapper type="glob" from="*.js" to="*.js"/>
		</apply>
		
		<concat destfile="${build.dir}/audio-player/assets/audio-player.js" append="true">
	        <fileset dir="${plugin.src.dir}/assets">
	        	<include name="lib/swfobject.js"/>
	        </fileset>
	    </concat>
		
		<zip destfile="${dist.dir}/audio-player.zip" basedir="${build.dir}"/>
	</target>
	
	<target name="-compileIfMissing" unless="swfExists">
		<antcall target="compile"/>
	</target>
		
	<target name="compile" description="Compile swf player">
		<filter token="sourceFile" value="file:///${basedir}/source/player.fla"/>
		<filter token="destFile" value="file:///${basedir}/source/player.swf"/>
		<copy file="swfcompile.template" tofile="swfcompile.jsfl" filtering="true"/>
		<replaceregexp file="swfcompile.jsfl" match="\\" replace="/" flags="g"/>
	    <exec executable="${flash.exe}">
	        <arg line="'${swfcompile.jsfl}'"/>
	    </exec>
	</target>
	
	<target name="release" depends="build" description="Release and deploy new version">
		<input message="FTP username:" addproperty="ftp.username"/>
		<input message="FTP password:" addproperty="ftp.password"/>
		
		<!-- Release to 1pixelout.net -->
		<ftp server="${ftp.server}" binary="true" password="${ftp.password}" userid="${ftp.username}" remotedir="${ftp.path}">
			<fileset dir="${dist.dir}"/>
		</ftp>
		
		<input message="WP SVN username:" addproperty="svn.username"/>
		<input message="WP SVN password:" addproperty="svn.password"/>
		<input message="New version:" addproperty="version.tag"/>
		
		<!-- Release to WP plugins repository -->
		<svn svnkit="true" username="${svn.username}" password="${svn.password}">
			<delete url="${svn.url}/trunk" message="Deleted current trunk"/>
			<import url="${svn.url}/trunk" path="${build.dir}/audio-player" message="Imported new release to trunk"/>
			<copy srcUrl="${svn.url}/trunk" destUrl="${svn.url}/tags/${version.tag}" message="Tagged version ${version.tag}"/>
		</svn>
		
		<antcall target="clean"/>
	</target>
</project>